{
  ////////////////////////////////////
  // Updates
  ////////////////////////////////////

  "extensions.autoCheckUpdates": false,

  ////////////////////////////////////
  // Settings
  ////////////////////////////////////

  "workbench.settings.editor": "json",
  "keyboard.dispatch": "keyCode",

  ////////////////////////////////////
  // Editor
  ////////////////////////////////////

  "editor.autoClosingBrackets": "never",
  "editor.fontFamily": "Monaco",
  "editor.dragAndDrop": false,
  "editor.cursorSmoothCaretAnimation": false,
  "editor.renderIndentGuides": true,
  "editor.minimap.enabled": false,
  "editor.renderWhitespace": "boundary",
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.acceptSuggestionOnEnter": "on",
  "editor.hover.enabled": true,
  "editor.parameterHints.enabled": false,
  "editor.quickSuggestions": false,
  "editor.quickSuggestionsDelay": 10,
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.wordBasedSuggestions": false,
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.suggestSelection": "first",
  "workbench.editor.showTabs": false,

  ////////////////////////////////////
  // Workbench
  ////////////////////////////////////

  "workbench.startupEditor": "none",
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.enablePreview": false,
  "workbench.editor.closeEmptyGroups": false,
  "workbench.fontAliasing": "antialiased",
  "workbench.tree.indent": 10,
  "workbench.tips.enabled": true,
  "workbench.colorCustomizations": {
    "gitDecoration.ignoredResourceForeground": "#706e6e"
  },

  "files.simpleDialog.enable": true,
  "files.maxMemoryForLargeFilesMB": 2048,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "files.autoSave": "off",
  "files.autoSaveDelay": 1000,
  "files.associations": {
    "Dockerfile-centos": "dockerfile",
    "Dockerfile_*": "dockerfile",
    "dockerfile-*": "dockerfile",
    "*.tsx": "typescriptreact"
  },
  "files.exclude": {
    "**/node_modules": true,
    "**/manifest.json": true
  },

  ////////////////////////////////////
  // NPM
  ////////////////////////////////////

  "npm.enableScriptExplorer": true,

  ////////////////////////////////////
  // Vim Plugin
  ////////////////////////////////////

  "vim.easymotion": true,
  "vim.sneak": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.insertModeKeyBindings": [],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": [":w"]
    },

    {
      "before": ["<tab>"],
      "commands": ["extension.goto-previous-buffer"]
    },

    {
      "before": ["∂"],
      "after": ["d", "d"]
    },
    {
      "before": ["¥"],
      "after": ["y", "y"]
    },

    // Movement
    {
      "before": ["∆"],
      "after": ["j", "z", "z"]
    },
    {
      "before": ["˚"],
      "after": ["k", "z", "z"]
    },

    // Tags
    {
      "before": ["t", "t"],
      "commands": ["expand_region"]
    },
    {
      "before": ["t", "u"],
      "commands": ["undo_expand_region"]
    },
  ],
  "vim.leader": ",",

  // Typescript
  "typescript.format.enable": true,
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // Typescript-React
  "[typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },

  // Javascript
  "javascript.format.enable": true,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // Javascript-React
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // JSONc
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // JSON
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // HTML
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
    // "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "html.autoClosingTags": false,

  ////////////////////////////////////
  // Python
  ////////////////////////////////////

  "python.jediEnabled": false,
  "python.formatting.provider": "black",
  "python.formatting.yapfPath": "/Users/wrongway4you/.asdf/installs/python/3.6.0/lib/python3.6/site-packages/yapf",
  "python.formatting.blackPath": "/Users/wrongway4you/.asdf/shims/black",
  "python.formatting.autopep8Args": ["--max-line-length", "120", "--experimental"],
  "python.formatting.yapfArgs": ["--style", "{based_on_style: chromium, indent_width: 20}"],
  "python.formatting.blackArgs": ["--line-length", "100"],
  "[python]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 4
  },

  ////////////////////////////////////
  // Explorer
  ////////////////////////////////////

  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,

  // Update imports automatically on file move
  "typescript.updateImportsOnFileMove.enabled": "always",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "breadcrumbs.enabled": true,
  "vsintellicode.modify.editor.suggestSelection": "choseToUpdateConfiguration",

  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/.venv": true,
    "**/venv": true,
    "htmlcov": true,
    "package-lock.json": true,
    "yarn.lock": true,
    "**/migrations": true
  },
  "workbench.activityBar.visible": false,

  "extensions.autoUpdate": false,
  "editor.fontSize": 14,

  // Emmet
  "emmet.showExpandedAbbreviation": "inMarkupAndStylesheetFilesOnly",
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },
  "editor.scrollBeyondLastLine": false,
  "workbench.iconTheme": "vscode-icons",
  "workbench.colorTheme": "Visual Studio Light",
  "extensions.ignoreRecommendations": true,
  "window.zoomLevel": 3,
  "editor.tabSize": 2,
  "editor.cursorStyle": "block",

  "vsicons.dontShowNewVersionMessage": true,
  "[c]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "C_Cpp.default.cppStandard": "c++17",
  "C_Cpp.default.cStandard": "c11",
  "C_Cpp.clang_format_path": "/usr/local/bin/clang-format",

  "omnisharp.useGlobalMono": "always"
}
